name: SQLite / Release

on:
  push:
    # On Push to Master branch
    branches:
      - master
    # Ignore all Tags / Release
    tags-ignore:
      - '**'

jobs:
  changes:
    name: Changes
    runs-on: ubuntu-latest
    outputs:
      changes: ${{ steps.changes.outputs.nuget }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            nuget:
              - '**.nuspec'

  version:
    name: Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.info }}
      notes: ${{ steps.notes.outputs.info }}
    steps:
      - uses: actions/checkout@v4
      - name: Get Package Version
        id: version
        uses: mavrosxristoforos/get-xml-info@2.0
        with:
          xml-file: "SQLite/Sqlite.nuspec"
          xpath: "//*[local-name()='package']/*[local-name()='metadata']/*[local-name()='version']"
      - name: Get Package Release Notes
        id: notes
        uses: mavrosxristoforos/get-xml-info@2.0
        with:
          xml-file: "SQLite/Sqlite.nuspec"
          xpath: "//*[local-name()='package']/*[local-name()='metadata']/*[local-name()='releaseNotes']"
      - name: Print Version
        id: print-output
        run: echo "${{ steps.version.outputs.info }} - ${{ steps.notes.outputs.info }}"

  release:
    name: Release
    needs:
      - changes
      - version
    permissions:
      contents: write
    if: ${{ needs.changes.outputs.changes == 'true' }}

    runs-on: windows-2022

    steps:
      - name: Git Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Pack
        run: nuget.exe pack Sqlite.nuspec
        working-directory: ${{ github.workspace }}\SQLite

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          name: SQLite ${{ needs.version.outputs.version }}
          tag_name: ${{ needs.version.outputs.version }}
          generate_release_notes: true
          files: |
            SQLite/*.nupkg

  ci-status:
    name: Status
    runs-on: ubuntu-latest
    needs:
      - release
    if: always()
    steps:
      - name: Success
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Failure
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
